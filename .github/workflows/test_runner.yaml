name: Run Python tests
run-name: ${{ github.actor }}
on: [push]

jobs:
  build:
    name: Run tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11.2"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: pip install pytest pytest-md pytest-emoji
      # setup and install poetry + dependencies: https://github.com/marketplace/actions/setup-poetry
      - uses: Gr1N/setup-poetry@v8
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
      - name: Set Poetry config
        run: |
          poetry config virtualenvs.in-project false
          poetry config virtualenvs.path ~/.cache/pypoetry/virtualenvs
      - name: Install dependencies
        run: |
          cd $GITHUB_WORKSPACE
          poetry install --with dev
      - name: Code Quality
        run: poetry run black . --check
      # https://github.com/marketplace/actions/run-pytest
      - name: Run Unit Tests
        run: make unit_test
      # - name: Run pytest
      #   uses: pavelzw/pytest-action@v2
      #   with:
      #     verbose: true
      #     emoji: true
      #     job-summary: true
      #     custom-arguments: '-q'
      #     click-to-expand: true
      #     report-title: 'Unit Test Results'
